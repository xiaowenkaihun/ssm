<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!--扫描控制层组件-->
    <context:component-scan base-package="com.itwen"/>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean
                            class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    <!--
    通过配置默认的Servlet处理静态资源
    当前控制的web.xml配置的前端控制器DispatcherServlet的url-pattern是/
    tomcat的web.xml配置的DefaultServlet的url-pattern也是/
    此时浏览器发送的请求会优先被DispatcherServlet进行处理，但是DispatcherServlet不能处理静态资源
    若配置了 <mvc:default-servlet-handler/> ，此时浏览器发送的所有请求都会被DefaultServlet处理
    若配置了 <mvc:default-servlet-handler/> 和 <mvc:annotation-driven/>
    浏览器发送的请求会先被DispatcherServlet处理，无法处理的DefaultServlet处理
    -->
    <mvc:default-servlet-handler/>
    <!--开启MVC的注解驱动-->
    <mvc:annotation-driven/>
    <!--视图控制器：直接通过标签，为当前的请求直接设置试图名称，实现页面跳转-->
    <!--若设置试图控制器，则只有视图控制器的请求会被处理，其他的请求全部404-->
    <!--此时必须配置一个标签：<mvc:annotation-driven/> -->
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/to/add" view-name="employee_add"/>
</beans>